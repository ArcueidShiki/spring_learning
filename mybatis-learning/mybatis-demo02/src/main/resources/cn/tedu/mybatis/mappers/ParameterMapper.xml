<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace 写 接口全类名-->
<mapper namespace="cn.tedu.mybatis.mappers.ParameterMapper">

    <!--int deleteUser();-->
    <delete id="deleteUser">
        delete from user where id = 35;
    </delete>

    <!--void updateUser();-->
    <update id="updateUser">
        update user set name = '迦摩' where id = 33;
    </update>

    <!--User getUserById();
        查询必须设置 resultType 和 resultMap
        resultType : 设置默认映射关系 , 把查询出来的字段名 作为属性名为类型赋值
        resultMap : 设置自定义映射关系 字段名和属性名不一致时使用
    -->
    <select id="getUserById" resultType="cn.tedu.mybatis.pojo.Emp">
        select * from user where id = 32;
    </select>

    <!--List<User> getAllUser();-->
    <select id="getAllUser" resultType="User"> /*因为设置了别名*/
        select * from user;
    </select>

<!--    User GetUserByUsername(String username); -->
    <select id="GetUserByUsername" resultType="User">
<!--占位符中的名字并不会影响结果 #{aaa}一样也可以-->
<!--占位符中的名字并不会影响结果 '${aaa}'-->
        select * from user where name = '${aaa}'
    </select>

    <!--    User checkLogin(String username,String password);-->
    <select id="checkLogin" resultType="User">
        select * from user where name = '${param1}' and password='${arg1}'
    </select>

<!--    User checkLoginByMap(Map<String,Object> map);-->
    <select id="checkLoginByMap"  resultType="User">
        select * from user where name = #{username} and password = #{password}
    </select>

<!--    int insertUser(User user);-->
    <insert id="insertUser">
        insert into user values(null,#{name},#{password},#{nickname})
    </insert>

<!--    User checkLoginByParam(@Param("username") String username,-->
<!--    @Param("password") String password);-->
    <select id="checkLoginByParam" resultType="User">
        select * from user where name = #{username} and password= #{password}
    </select>

</mapper>
